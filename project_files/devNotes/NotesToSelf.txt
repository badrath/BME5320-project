1) draw out how I want to filter, then split out the query sequence results, then batch run them
	a) finding GO options:
		1) python script that runs qsubs of system commands
		2) python to split results into a batch file for each query sequence in a batch4GO directory within the data directory, 
			return the # of files created, 
			finally, create an array job that runs through running blastdbcmd on each of the resultant batch files,
	b) amalgamating GO returns
		1) go through each file retaining only the unique GO terms.
		2) concatenate these into a single line, for each query sequence
		3) go through the files from 1 to max, appending each line to a final output file.

Notes for report:
1)	Threshold choice based on publication: https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3820096/, "E()-valus, identiy, and bits"
2)	Paper about finding orthologs: https://link.springer.com/protocol/10.1007%2F978-1-61779-582-4_9

11/7:
1) need to rework filter_split_seq.py so that I can call blastdbcmd wiht -outfmt %a -entry '' -target_only -db '<path to ref seq>'

12/13:
1)	need to debug filter and blastdbcmd but I think the logic is mostly there and correct
2)	all qsubs are subbing to sandbox queue, this will need to be changed for the production run

12/14:
1)	sent email with question about filtering to DK and Austin
2)	filtering and fxnaming works otherwise!
3)	TODO: amalgamateFxNames.job
	a) probably do this by using a python script to read through all .fxname and .mqueries files, concatenating them, then pairing (by line), and finally writing them all to a single output file (tab delimitted). 
	
12/15:
1) rerun full production run

2) need to generate the flow charts into pngs and place them appropriately onto the github wiki

3) need to write a small discussions section?

4) need to remove the email notifications for submission. 

5) write a how-to-run page to github wiki